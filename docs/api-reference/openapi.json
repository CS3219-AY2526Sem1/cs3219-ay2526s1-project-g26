{
  "openapi": "3.0.0",
  "info": {
    "title": "User and Question Service API",
    "description": "API documentation for user and question services, including user registration, login, token verification, and fetching matching questions.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost/api"
    }
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "UserService"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "Password123"
                  },
                  "full_name": {
                    "type": "string",
                    "example": "John Doe"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "email": {
                          "type": "string",
                          "example": "user@example.com"
                        },
                        "full_name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "user",
                            "admin"
                          ],
                          "example": "user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, missing required fields or duplicate email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email and password are required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "UserService"
        ],
        "summary": "Login an existing user",
        "operationId": "loginUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "Password123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "token": {
                      "type": "string",
                      "example": "jwt_token_example"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "email": {
                          "type": "string",
                          "example": "user@example.com"
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "user",
                            "admin"
                          ],
                          "example": "user"
                        },
                        "full_name": {
                          "type": "string",
                          "example": "John Doe"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid email or password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/verify-token": {
      "post": {
        "tags": [
          "UserService"
        ],
        "summary": "Verify JWT token and get user info",
        "operationId": "verifyToken",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token successfully verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "email": {
                          "type": "string",
                          "example": "user@example.com"
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "user",
                            "admin"
                          ],
                          "example": "user"
                        },
                        "full_name": {
                          "type": "string",
                          "example": "John Doe"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/question/match": {
      "get": {
        "tags": [
          "QuestionService"
        ],
        "summary": "Get a matching question based on difficulty and categories",
        "operationId": "getMatchingQuestion",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "difficulty",
            "in": "query",
            "required": true,
            "description": "The difficulty level of the question (e.g., 'easy', 'medium', 'hard').",
            "schema": {
              "type": "string",
              "example": "medium"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of categories to match (e.g., 'math,science').",
            "schema": {
              "type": "string",
              "example": "math,science"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A matching question was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "question": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "title": {
                          "type": "string",
                          "example": "What is the capital of France?"
                        },
                        "difficulty": {
                          "type": "string",
                          "example": "medium"
                        },
                        "constraints": {
                          "type": "string",
                          "example": "Time limit: 30 seconds"
                        },
                        "examples": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Paris is the capital of France."
                          }
                        },
                        "hints": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The capital is in Europe."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, missing required parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Difficulty is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No matching question found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No matching question found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
